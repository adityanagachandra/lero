[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lerobot-dataset-editor"
version = "0.3.0"
description = "A tool for editing and managing LeRobot datasets for robot imitation learning"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
    { name = "Dataset Editor Team", email = "example@example.com" }
]
keywords = ["robotics", "dataset", "machine-learning", "imitation-learning", "lerobot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0",
    "pyarrow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
gui = [
    "matplotlib>=3.5.0",
    "opencv-python>=4.5.0",
    "Pillow>=8.0.0",
]

[project.scripts]
lerobot-dataset-editor = "lerobot_dataset_editor.__main__:main"

[project.urls]
Homepage = "https://github.com/example/lerobot-dataset-editor"
Repository = "https://github.com/example/lerobot-dataset-editor"
Documentation = "https://github.com/example/lerobot-dataset-editor#readme"
"Bug Tracker" = "https://github.com/example/lerobot-dataset-editor/issues"

[tool.hatch.version]
path = "lerobot_dataset_editor/__init__.py"
pattern = "__version__ = ['\"](?P<version>[^'\"]*)['\"]"

[tool.hatch.build.targets.wheel]
packages = ["lerobot_dataset_editor"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=lerobot_dataset_editor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
    ".venv/*",
    "build/*",
    "dist/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]